// Contract Goal: Explore the Planets within the solar system
//
// Contract Objectives:
//   	1) Enter orbit around the planet (low and high)
//		2) Establish a Comm Relay Satellite 
//		3) Send a probe to the surface of the planet
//		4) Send a surface experiment and return home
//		5) Send a science rover for exploration
//      6) For each Moon around the planet. perform the following:
//		6a) Orbit and Land a probe
//		6b) Rover on the surface
//		6c) Science return
//
//------------------------------------------------------------------------------------------------------------------------

CONTRACT_TYPE
{
	name				= RED_PlanetExploration
	sortKey				= 275
	group				= Robotic Exploration Division
	agent				= Robotic Exploration Division
	title				= #RED_PlanetExploration_1
	genericTitle 		= #RED_PlanetExploration1
	synopsis			= #RED_PlanetExploration_2
	notes				= #RED_PlanetExploration2
	completedMessage	= #RED_PlanetExploration_4
	genericDescription 	= #RED_PlanetExploration_5
	description			= #RED_PlanetExploration_6
	minExpiry			= 5.0
	maxExpiry			= 100.0
	deadline			= 0
	cancellable			= false
	declinable			= false
	autoAccept 			= false
	maxCompletions		= 1
	maxSimultaneous		= 1
	//
	targetBody			=  @/targetBodyValid1
	//
	// Contract Reweards
	prestige			= Trivial										// Possible values are: Trivial , Significant , Exceptional 
	rewardScience		= @KSP_Career_Progression2:rewardScience * 0.5
	rewardReputation	= @KSP_Career_Progression2:rewardRep * 0.5	
	rewardFunds			= @KSP_Career_Progression2:baseComp * 1.75
	advanceFunds		= @KSP_Career_Progression2:baseAdv * 0.5
	//
	// DATA Contract Configuration --------------------------------------------------------------------------------------------

	DATA_EXPAND
	{
		type 				= CelestialBody
		targetBody1			= @KSP_Career_Progression2:homeSystemPlanets
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	
	DATA
	{
		type = double
		SpaceThreshold = @/targetBody.SpaceAltitudeThreshold()
		AtmLimit = @/targetBody.AtmosphereAltitude()
		MoonSOI = @/targetBody.SphereOfInfluence()
		highLimit = @/MoonSOI - @/MoonSOI * 0.1
		SpaceLimit = @/SpaceThreshold / 1000
		minPe = @SpaceThreshold - ((@/SpaceThreshold - @/AtmLimit)*0.4)
		minAp = @SpaceThreshold + ((@/MoonSOI - @/SpaceThreshold)*0.3)
		minPeKM = @/minPe/1000
		minApKM = @/minAp/1000
		relayLimit = @/targetBody.Radius() * 1.1
		relayLimitKM = @relayLimit / 1000
		title = #RED_PlanetExploration_MSG1
	}		
	DATA
	{
		type = double
		minRelayPower = @KSP_Career_Progression2:minRelayHome // HG-5 or equivalent
	}	
 	// Science recovery: transmit, recover, or ideal.
    DATA
    {
		type = ScienceRecoveryMethod
        hidden = true
        recoveryMethod = Ideal
    }
	DATA
	{
		type 			= List<Biome>
        hidden = true
		uniquenessCheck = CONTRACT_ACTIVE	
		biomeSelect		= @/targetBodyValid1.Biomes().Where(b => b.RemainingScience() > 10).Random(2)
		biomeX = @biomeSelect.First()
		biomeZ = @biomeSelect.Last()
	}
	//Biome name node
	DATA
    {
		type = Biome
        hidden = true
		biome1 = @biomeSelect.First()
		biome2 = @biomeSelect.Last()
    }

	DATA
	{
		type				= List<CelestialBody>
		requiredValue		= false
		targetList		 	= @KSP_Career_Progression2:nextBodies
		reachedList			= @KSP_Career_Progression2:reachedPlanets	
		pMoonList			= @targetBody.Children()
	}

	DATA
	{
		type			= int
		requiredValue 	= false
		numMoons		= @KSP_Career_Progression2:homeMoons.Count()
		numMoonsOrbit	= @KSP_Career_Progression2:orbitedMoons.Count()
		pMoonCount		= @/pMoonList.Count()
		
	}		
	
	// Contract Requirements --------------------------------------------------------------------------------------------------

	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @/numMoons == @/numMoonsOrbit
		title = #RED_PlanetExploration_MSG1
	}
	REQUIREMENT
	{
		name = NextPlanetCheck
		type = Expression
		expression = (@/targetList.Contains(@/targetBodyValid1) || @/reachedList.Contains(@/targetBodyValid1))  == true
		title = #RED_PlanetExploration_MSG2
	}


	// Contract Behaviors -----------------------------------------------------------------------------------------------------

	
	// Contract Parameters ----------------------------------------------------------------------------------------------------
	
	// Objective #1: Send a probe to orbit the planet (High and Low)
	PARAMETER
	{
		name 	= Objective1
		type	= All
		title 	= #RED_PlanetExploration_7
		completedMessage = #RED_PlanetExploration_8
		rewardFunds = @/KSP_Career_Progression2:baseComp * 1.2
		//
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
		}
		PARAMETER
        {
            name 		= OrbitMoon
            type 		= Orbit
			situation 	= ORBITING
			maxPeA = @/minPe
			minApA = @/minAp
            title = #RED_PlanetExploration_MSG3
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= true
			situation		= InSpaceLow
			recoveryMethod	= Transmit
			rewardFunds		= @/advanceFunds * 0.1
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= true
			situation		= InSpaceHigh
			recoveryMethod	= Transmit
			rewardFunds		= @/advanceFunds * 0.1
		}
	}

	// Objective #2: Send a Relay Satellite to the Planet
	PARAMETER
	{
		name 	= Objective2
		type	= All
		title 	= #RED_PlanetExploration_9
		completedMessage = #RED_PlanetExploration_10
		rewardFunds = @/KSP_Career_Progression2:baseComp * 1.2
		//
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Relay
		}
		PARAMETER
        {
            name 		= OrbitMoon
            type 		= Orbit
			situation 	= ORBITING
			minAltitude = @/relayLimit
			title = #RED_PlanetExploration_MSG4
		}
	}

	// Objective #3: Send a probe to safely land on the surface of the planet
	PARAMETER
	{
		REQUIREMENT
		{
			name 		= PlanetSurfaceCheck
			type 		= Expression
			expression 	= @/targetBody.HasSurface() == true
			title		= #RED_PlanetExploration_GEN1
		}				
		name = PlanetSurfaceProbe
		type = VesselParameterGroup
		title = #RED_PlanetExploration_11
		define = PlanetSurfaceProbe
		completedMessage = #RED_PlanetExploration_12
		rewardFunds = @/KSP_Career_Progression2:baseComp * 1.5

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			title = #RED_PlanetExploration_MSG6
			completeInSequence 	= true
		}
		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			title = #RED_PlanetExploration_MSG5
			situation = SrfLanded
			location = Surface
			recoveryMethod = Transmit
			completeInSequence 	= true
		}
    }    

	// Objective #5: Send a rover to the surface and visit two different biomes

	PARAMETER
	{
		REQUIREMENT
		{
			name 		= PlanetSurfaceCheck
			type 		= Expression
			expression 	= @/targetBody.HasSurface() == true
			title		= #RED_PlanetExploration_GEN1
		}				
		
		name = PlanetRover
		type = VesselParameterGroup
		title = #RED_PlanetExploration_5a
		define = PlanetRover
		completedMessage = #RED_PlanetExploration_5b
		rewardFunds = @/KSP_Career_Progression2:baseComp * 1.5

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Rover
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			title = #RED_PlanetExploration_MSG6
			completeInSequence 	= true
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = @/targetBody
			situation = LANDED
			biome = @/biome1
			title = #RED_PlanetExploration_MSG7
			completeInSequence 	= true
		}
		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			title = #RED_PlanetExploration_MSG15
			biome = @/biome1
			situation = SrfLanded
			location = Surface
			recoveryMethod = Transmit
			completeInSequence 	= true
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = @/targetBody
			situation = LANDED
			biome = @/biome2
			title = #RED_PlanetExploration_MSG8
			completeInSequence 	= true
		}
		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			title = #RED_PlanetExploration_MSG5
			biome = @/biome2
			situation = SrfLanded
			location = Surface
			recoveryMethod = Transmit
			completeInSequence 	= true
		}
    }    
    
	//Objective 6a: Explore the moons around the planet
	//
	PARAMETER
	{
		REQUIREMENT
		{
			name 		= PlanetMoonCheck
			type 		= Expression
			expression 	= @/pMoonList.Count() >= 1
			title		= #RED_PlanetExploration_GEN2
		}
		
		name 	= Objective6a
		type	= All
		title 	= #RED_PlanetExploration_13
		completedMessage = #RED_PlanetExploration_14
		rewardFunds = @/KSP_Career_Progression2:baseComp * 1.5
		//
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name		= VesselIsType
			type		= VesselIsType
			vesselType 	= Probe
		}
		PARAMETER
        {
            name 		= OrbitMoon
            type 		= ReachState
			situation 	= ORBITING
            title = #RED_PlanetExploration_MSG9
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= false
			situation		= InSpaceLow
			recoveryMethod	= Transmit
			rewardFunds		= @/advanceFunds * 0.1
		}
		PARAMETER
		{
			name			= CollectScience
			type			= CollectScience
			optional		= false
			situation		= InSpaceHigh
			recoveryMethod	= Transmit
			rewardFunds		= @/advanceFunds * 0.1
		}
		ITERATOR
		{
			type 		= CelestialBody
			moonTarget	= @/pMoonList
		}

	}
		

	
}
		
	
	
	
	
