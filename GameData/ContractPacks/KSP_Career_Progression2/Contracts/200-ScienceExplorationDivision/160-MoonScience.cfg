// *************************** Home World Surface Science Collection
// 
// Goal for this contract is collect science around the home planet.  
//
CONTRACT_TYPE
{
	name 			= SED_MoonScience
	sortKey 		= 160
	group 			= Science Exploration Division
	agent			= Science Exploration Division
	title			= #SED_MoonScience_1
	genericTitle	= #SED_MoonScience_2
	topic			= Exploration
	synopsis 		= #SED_MoonScience_3
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 100
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= #SED_MoonScience_4
	genericDescription 	= #SED_MoonScience_5
	completedMessage	= #SED_MoonScience_6
	
	// Contract Reweards
	prestige			= Trivial										// Possible values are: Trivial , Significant , Exceptional 
	rewardScience		= @KSP_Career_Progression2:rewardScience * 0.1
	rewardReputation	= @KSP_Career_Progression2:rewardRep * 0.2	
	rewardFunds			= @KSP_Career_Progression2:baseComp * 0.7
	advanceFunds		= @KSP_Career_Progression2:baseAdv * 0.4
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 				= CelestialBody
		targetBody1			= @KSP_Career_Progression2:homeMoons
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	
	DATA
	{
		type			= List<ScienceExperiment>
		hidden			= true
		experiment1		= AvailableExperiments(@/targetBody)
	}	
	DATA
	{
		type = int
		selectRoll = Random(1, 2)
		//
	}
	DATA
	{
		type 			= Biome
        hidden = true
		uniquenessCheck = CONTRACT_ACTIVE	
		biometemp		= @targetBody.Biomes().Where(sc => sc.RemainingScience() > 10).SelectUnique()
	}
	
		DATA
	{
		//[ SrfLanded, SrfSplashed, FlyingLow, FlyingHigh, InSpaceLow, InSpaceHigh ]
		//
		type			= List<ScienceSubject>
        hidden = true
		//
		// Identify science to retrieve in space around the moon
		//
		spaceScienceTemp1		= AllScienceSubjectsByBodyExperiment([@targetBody], @experiment1)
		spaceScienceTemp2		= @spaceScienceTemp1.Where(s => s.Situation() == InSpaceLow || s.Situation() == InSpaceHigh)
		spaceScienceTemp3		= @spaceScienceTemp2.Where(s => s.RemainingScience() / s.TotalScience() >= 0.1)
		spaceScienceList		= @spaceScienceTemp3.Random(4)
		//
		// Identify science to retrieve from the surface
		//
		surfaceScienceTemp1		= AllScienceSubjectsByBiomeExperiment([@/biometemp], @experiment1 )
		surfaceScienceTemp2		= @surfaceScienceTemp1.Where( s => s.Situation() == SrfLanded || s.Situation() == SrfSplashed)
		surfaceScienceTemp3		= @surfaceScienceTemp2.Where( s => s.RemainingScience() / s.TotalScience() >= 0.1)
		surfaceScienceList		= @surfaceScienceTemp3.Random(4)
	}

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name	= Any
		type 	= Any
		
			REQUIREMENT
			{
				type = Expression
				title = #SED_MoonScience_7
				expression = @/spaceScienceList.Count() >= 1
			}
			REQUIREMENT
			{
				type = Expression
				title = #SED_MoonScience_7
				expression = @/surfaceScienceList.Count() >= 1
			}
	}		
	REQUIREMENT
	{
		name	 	= Landing
		type 		= Landing
		checkType 	= UNMANNED
		title 		= #SED_MoonScience_8
	}
	REQUIREMENT
	{
		name	 	= Orbit
		type 		= Orbit
		checkType 	= UNMANNED
		title 		= #SED_MoonScience_8a
	}
	REQUIREMENT
	{
		name 				= CompleteContract
		type 				= CompleteContract
		contractType		= SED_MoonScience
		cooldownDuration 	= 30d
	}		

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
    {
		REQUIREMENT
		{
			name 		= MoonSpaceScience
			type		= Expression
			expression	= @/spaceScienceList.Count() >= 1
		}

		name 				= CollectSpaceScience
		type 				= CollectScience
        subject 			= @scienceID
        recoveryMethod 		= Ideal
		rewardFunds 		= @KSP_Career_Progression2:baseComp * 0.15
		completedMessage 	= #SED_MoonScience_9
		title 				= #SED_MoonScience_10
 		ITERATOR
        {
            type = ScienceSubject
            scienceID = @/spaceScienceList
 			REQUIREMENT
			{
				type = Expression
				expression = @../spaceScienceList.Count() > 0
			}
		}

    }
	PARAMETER
    {
	
		REQUIREMENT
		{
			name 		= MoonSurfaceScience
			type		= Expression
			expression	= @/surfaceScienceList.Count() >= 1
		}
		name 				= CollectSurfaceScience
		type 				= CollectScience
        subject 			= @surfaceID
        recoveryMethod 		= Ideal
		rewardFunds 		= @KSP_Career_Progression2:baseComp * 0.15
		completedMessage 	= #SED_MoonScience_11
		title 				= #SED_MoonScience_12
 		ITERATOR
        {
            type = ScienceSubject
            surfaceID = @/surfaceScienceList
 			REQUIREMENT
			{
				type = Expression
				expression = @../surfaceScienceList.Count() > 0
			}
		}

    }



}	
		
	